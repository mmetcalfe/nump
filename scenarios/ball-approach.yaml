# Search settings:
# seed: 615357 # RANDOM, or an integer.
# seed: 6153 # Finds, then loses feasible solution.
# seed: 60943569 # Finds a goal state.
seed: RANDOM # RANDOM, or an integer.
# seed: 56263189

num_samples: 10000
search_time_limit_seconds: 60
search_trial_duration: 60
replan_interval: 10000

# Make RRBT and RRT* versions of these parameters:
searchTimeLimitAfterFeasible: 5
maxTimeWithoutImprovement: 3
timeBetweenIdealSolutionAttempts: 1

rrtsSearchTimeLimitAfterFeasible: 5
rrtsMaxTimeWithoutImprovement: 1
rrtsTimeBetweenIdealSolutionAttempts: 1

rrbt_append_reject_cov_threshold: 0.01
rrbt_append_reject_cost_threshold: 0.001

min_kick_probability: 0.0
rrbt_chance_constraint: 0.7 # Minimum acceptable probability of NOT failing due to collision
rrbt_propagate_time_step: 0.1 # Timestep in seconds to use for uncertainty propagation along trajectories

ball_obstacle_radius_factor: 1 # Ball clearence in the direction of kicking as fraction of ball radius [1, +Inf).
ball_obstacle_offset_factor: 0.2 # Ball clearence in approach direction as fraction of kickbox length [0, 1].
# ball_obstacle_radius_factor: 1.2 # Obstacle radius as fraction of ball radius [1, +Inf).
# ball_obstacle_offset_factor: 0.5 # Obstacle offset from ball edge as fraction of kickbox length [0, 1].

# Drawing:
draw_period: 1
canvas_size: [500, 500]

# Scenario description:
state_type: PositionBearing # Position, PositionBearing
map_size: [2, 2]
#initial_state: [0.1, 0.9]
#initial_covariance:
#    - [0.002, 0]
#    - [0, 0.002]
#goal_state: [0.9, 0.1]

footprint_size: [0.12, 0.17]
# ball: { type: CIRCLE, position: [0.5, 0.5], radius: 0.065 }
ball: { type: CIRCLE, position: [1, 1], radius: 0.065 }
target_angle: 3.14
target_angle_range: 2.5
kickboxes:
    kick_extent: 0.1
    foot_width: 0.07
    foot_sep: 0.03
    foot_front_x: 0.06

initial_state: [0.1, 0.9, 0]
initial_covariance:
    - [0.001, 0, 0]
    - [0, 0.001, 0]
    - [0, 0, 0.001]
    # - [0.00001, 0, 0]
    # - [0, 0.00001, 0]
    # - [0, 0, 0.00001]

goal_state: [0.85, 0.5, 3.14]

obstacles:
    # - { type: CIRCLE, position: [0.5, 0.5], radius: 0.065 }
    - { type: CIRCLE, position: [1, 1], radius: 0.065 }
    # - { type: CIRCLE, position: [0.5, 0.555], radius: 0.055 }
    # - { type: CIRCLE, position: [0.5, 2.445], radius: 0.055 }

measurement_regions:
    - { type: CIRCLE, position: [1, 1], radius: 100 }
    # - { type: CIRCLE, position: [0.5, 0.5], radius: 0.4 }
    # - { type: CIRCLE, position: [0.5, 0.555], radius: 1 }
    # - { type: CIRCLE, position: [0.5, 2.445], radius: 1 }
